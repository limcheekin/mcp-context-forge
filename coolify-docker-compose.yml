version: "3.9"          # Supported by both podman-compose and Docker Compose v2+

volumes:                # Named volumes survive podman-compose down/up
  pgadmindata:
  redisinsight_data:

###############################################################################
#  CORE SERVICE â€“ MCP Gateway
###############################################################################
services:

  # â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
  # MCP Gateway - the main API server for the MCP stack
  # â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
  gateway:
    image: ghcr.io/ibm/mcp-context-forge:latest
    build:
      context: .
      dockerfile: Containerfile     # Same one the Makefile builds    
    restart: unless-stopped
    ports:
      - "4444:4444"                 # HTTP (or HTTPS if SSL=true is set)

    # â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
    # Environment â€“ pick ONE database URL line, comment the rest
    # https://github.com/limcheekin/mcp-context-forge/blob/main/.env.example
    # â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
    environment:
      - HOST=0.0.0.0
      - PORT=4444
      - DATABASE_URL=${DATABASE_URL:-postgresql://postgres:password@postgres:5432/mcp}
      - CACHE_TYPE=${CACHE_TYPE:-redis} # backend for caching (memory, redis, database, or none)
      - REDIS_URL=${REDIS_URL:-redis://redis:6379/0}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-changeme}
      - BASIC_AUTH_USER=${BASIC_AUTH_USER:-admin}
      - BASIC_AUTH_PASSWORD=${BASIC_AUTH_PASSWORD:-changeme}
      - MCPGATEWAY_UI_ENABLED=${MCPGATEWAY_UI_ENABLED:-false}
      - MCPGATEWAY_ADMIN_API_ENABLED=${MCPGATEWAY_ADMIN_API_ENABLED:-false}      
      # - SSL=true
      # - CERT_FILE=/app/certs/cert.pem
      # - KEY_FILE=/app/certs/key.pem

    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4444/health"]
      #test: ["CMD", "curl", "-f", "https://localhost:4444/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 20s

    # volumes:
    #   - ./certs:/app/certs:ro   # mount certs folder read-only

###############################################################################
#  OPTIONAL ADMIN TOOLS â€“ handy web UIs for DB & cache (disabled by default)
###############################################################################
  pgadmin:              # ðŸ”§ Postgres admin UI
    image: dpage/pgadmin4:latest
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL:-admin@example.com}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD:-changeme}
    ports:
      - "5050:80"      # http://localhost:5050
    volumes:
      - pgadmindata:/var/lib/pgadmin

  # â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
  # Redis Insight â€“ a powerful Redis GUI (recently updated)
  # â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
  redis_insight:                    # ðŸ”§ Redis Insight GUI
    image: redis/redisinsight:latest
    container_name: redisinsight
    restart: unless-stopped
    ports:
      - "5540:5540"                 # Redis Insight UI (default 5540)
 
    # â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
    # Persist data (config, logs, history) between restarts
    # â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
    # volumes:
    #   - ./redisinsight_data:/data
    volumes:
      - redisinsight_data:/data  # <â€” persist data in named volume

    # â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
    # Preconfigure Redis connection(s) via env vars
    # â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
    environment:
      # Single connection (omit "*" since only one):
      - RI_REDIS_HOST=${RI_REDIS_HOST:-redis}         # <â€” your Redis hostname
      - RI_REDIS_PORT=${RI_REDIS_PORT:-6379}          # <â€” your Redis port
      - RI_REDIS_USERNAME=${RI_REDIS_USERNAME:-default}  # <â€” ACL/username (Redis 6+)
      #- RI_REDIS_PASSWORD=changeme  # <â€” Redis AUTH password
      #- RI_REDIS_TLS=true           # <â€” enable TLS

      # Optional: validate self-signed CA instead of trusting all:
      # - RI_REDIS_TLS_CA_PATH=/certs/selfsigned.crt
      # - RI_REDIS_TLS_CERT_PATH=/certs/client.crt
      # - RI_REDIS_TLS_KEY_PATH=/certs/client.key
      # - RI_REDIS_TLS=true           # (already set above)

      # â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
      # Core Redis Insight settings
      # â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
      - RI_APP_HOST=0.0.0.0          # <â€” listen on all interfaces
      - RI_APP_PORT=5540             # <â€” UI port (container-side)

      # â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
      # (Optional) Enable HTTPS for the UI
      # â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
      # - RI_SERVER_TLS_KEY=/certs/tls.key
      # - RI_SERVER_TLS_CERT=/certs/tls.crt

  mcposerver:
    ports:
      - '10001:8000'    
    command: ["--config", "/app/conf/config.json"]
    build:
      context: ./mcpo
    image: mcpo-context-forge:latest  
    restart: unless-stopped
    volumes:
      - /home/limcheekin/docker/volumes/mcposerver/conf:/app/conf:ro

# Create user/pass in postgres
# CREATE ROLE mcp WITH LOGIN PASSWORD 'your_secure_password';
# CREATE DATABASE mcp OWNER mcp;
# GRANT ALL PRIVILEGES ON DATABASE mcp TO mcp;
